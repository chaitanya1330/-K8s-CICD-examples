eksctl create cluster \
 --name Kubernetes-cluster \
 --region us-east-2 \
 --version 1.21 \
 --managed \
 --nodegroup-name workergroup \
 --node-type t2.small \
 --nodes-min 1 \
 --nodes-max 3 \
 --node-volume-size 20 \
 --ssh-access \
 --ssh-public-key k8s \
 --asg-access \
 --external-dns-access \
 --full-ecr-access \
 --kubeconfig /home/ubuntu/.kube/config


eksctl create cluster
--name eks-cluster
--version 1.15
--region us-east-2
--nodegroup-name eks-worker-nodes
--node-type t2.small
--nodes 2
--nodes-min 2
--nodes-max 4
--node-volume-size 20 
--ssh-access
--ssh-public-key k8s
--full-ecr-access
--managed

but before doing the below work we have to update our aws cli in our instance to latest version:
to upgrade it:
first check the version: aws --version

Install AWS CLI using Pip (if not installed): 
pip install awscli --upgrade --user

if pip is not there:
sudo apt update
sudo apt install python3-pip

Upgrade AWS CLI: If the AWS CLI is already installed, you can upgrade it to the latest version using Pip:
pip install awscli --upgrade --user
now do the below part and once more check the aws version: aws --version


after installing the cluster through eksctl we have to update the aws cli and kubeconfig file in order to connect with our cluster:
aws eks update-kubeconfig --name Kubernetes-cluster --region us-east-2
check cluster status:
aws eks describe-cluster --name Kubernetes-cluster --region us-east-2
orelse we can regenerate that file :
eksctl utils write-kubeconfig --cluster Kubernetes-cluster --region us-east-2




  eksctl create nodegroup \
  --cluster my-eks-cluster \
  --region us-east-2 \
  --name my-workerng \
  --node-ami-family Ubuntu2004 \
  --node-type t2.small \
  --nodes 2 \
  --nodes-min 2 \
  --nodes-max 4 \
  --ssh-access \
  --ssh-public-key k8s \
  --full-ecr-access


arn:aws:cloudformation:us-east-2:350515911022:stack/eksctl-my-eks-cluster-cluster/81305810-9f60-11ee-9444-0a99759a4791

